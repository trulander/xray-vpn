#!/bin/bash

echo "üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Xray VPN Server (–º—É–ª—å—Ç–∏-–ø—Ä–æ—Ç–æ–∫–æ–ª—å–Ω–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞)"
echo "================================================================="

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
if [ -f .env ]; then
    source .env
    echo "üìã –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:"
    echo "   –î–æ–º–µ–Ω: ${DOMAIN:-–Ω–µ –∑–∞–¥–∞–Ω}"
    echo "   Email: ${EMAIL:-–Ω–µ –∑–∞–¥–∞–Ω}"
else
    echo "‚ùå .env —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω"
    exit 1
fi
echo

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Å–∞–π—Ç–∞
echo "1. üåê –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Å–∞–π—Ç–∞:"
echo "HTTP (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ä–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞ HTTPS):"
curl -s -I "http://localhost" 2>/dev/null | head -3 || curl -s -I "http://${DOMAIN}" 2>/dev/null | head -3 || echo "‚ùå HTTP –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"

echo "HTTPS (–¥–æ–ª–∂–µ–Ω –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –¥–µ–º–æ —Å–∞–π—Ç):"
curl -s -I "https://localhost" 2>/dev/null | head -3 || curl -s -I "https://${DOMAIN}" 2>/dev/null | head -3 || echo "‚ùå HTTPS –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
echo

# –ü—Ä–æ–≤–µ—Ä–∫–∞ VPN –ø—É—Ç–µ–π (–¥–æ–ª–∂–Ω—ã –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –æ—à–∏–±–∫–∏ –¥–ª—è –æ–±—ã—á–Ω—ã—Ö HTTP –∑–∞–ø—Ä–æ—Å–æ–≤)
echo "2. üîí –ü—Ä–æ–≤–µ—Ä–∫–∞ VPN –ø—É—Ç–µ–π (—Å–ª—É—á–∞–π–Ω—ã–µ –ø—É—Ç–∏ –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏):"

# –ß–∏—Ç–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω–∞
if [ -f "config/nginx/${DOMAIN}_location" ]; then
    echo "üìÑ –ê–Ω–∞–ª–∏–∑ –∫–∞—Å—Ç–æ–º–Ω—ã—Ö location –±–ª–æ–∫–æ–≤:"
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º –ø—É—Ç–∏ –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    WS_PATHS=$(grep -o "location [^{]*" "config/nginx/${DOMAIN}_location" | grep -v grpc | cut -d' ' -f2)
    GRPC_PATHS=$(grep -o "location [^{]*" "config/nginx/${DOMAIN}_location" | grep grpc | cut -d' ' -f2)
    
    echo "WebSocket –ø—É—Ç–∏:"
    for path in $WS_PATHS; do
        if [[ "$path" != *"grpc"* ]]; then
            echo "  Testing $path:"
            curl -s -I "https://localhost$path" 2>/dev/null | head -1 || curl -s -I "https://${DOMAIN}$path" 2>/dev/null | head -1 || echo "    ‚ùå –ü—É—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
        fi
    done
    
    echo "gRPC –ø—É—Ç–∏:"
    for path in $GRPC_PATHS; do
        echo "  Testing $path:"
        curl -s -I "https://localhost$path" 2>/dev/null | head -1 || curl -s -I "https://${DOMAIN}$path" 2>/dev/null | head -1 || echo "    ‚ùå –ü—É—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
    done
else
    echo "‚ùå –§–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ nginx –Ω–µ –Ω–∞–π–¥–µ–Ω: config/nginx/${DOMAIN}_location"
    echo "   –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –ø—É—Ç–∏ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏:"
    
    # –ü—Ä–∏–º–µ—Ä—ã —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö –ø—É—Ç–µ–π
    TEST_PATHS=(
        "/api/v1/vmess"
        "/ws/vless" 
        "/stream/trojan"
        "/vmess/grpc"
        "/vless/grpc"
        "/trojan/grpc"
    )
    
    for path in "${TEST_PATHS[@]}"; do
        echo "  Testing $path:"
        curl -s -I "https://localhost$path" 2>/dev/null | head -1 || echo "    ‚ùå –ü—É—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
    done
fi
echo

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
echo "3. üê≥ –°—Ç–∞—Ç—É—Å Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:"
docker-compose ps
echo

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏—Ö –ø–æ—Ä—Ç–æ–≤ Xray —Å–µ—Ä–≤–µ—Ä–∞
echo "4. üîå –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏—Ö –ø–æ—Ä—Ç–æ–≤ Xray —Å–µ—Ä–≤–µ—Ä–∞:"
if docker-compose ps | grep -q "xray-server.*Up"; then
    echo "–ü–æ—Ä—Ç—ã WebSocket:"
    docker-compose exec nginx-proxy nc -z xray-server 10001 && echo "  ‚úÖ VMess WS: 10001" || echo "  ‚ùå VMess WS: 10001"
    docker-compose exec nginx-proxy nc -z xray-server 10002 && echo "  ‚úÖ VLESS WS: 10002" || echo "  ‚ùå VLESS WS: 10002"
    docker-compose exec nginx-proxy nc -z xray-server 10003 && echo "  ‚úÖ Trojan WS: 10003" || echo "  ‚ùå Trojan WS: 10003"
    
    echo "–ü–æ—Ä—Ç—ã gRPC:"
    docker-compose exec nginx-proxy nc -z xray-server 10011 && echo "  ‚úÖ VMess gRPC: 10011" || echo "  ‚ùå VMess gRPC: 10011"
    docker-compose exec nginx-proxy nc -z xray-server 10012 && echo "  ‚úÖ VLESS gRPC: 10012" || echo "  ‚ùå VLESS gRPC: 10012"
    docker-compose exec nginx-proxy nc -z xray-server 10013 && echo "  ‚úÖ Trojan gRPC: 10013" || echo "  ‚ùå Trojan gRPC: 10013"
else
    echo "‚ùå Xray —Å–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω"
fi
echo

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ SSL
echo "5. üîê –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ SSL:"
docker-compose exec demo-website env | grep -E "(VIRTUAL_HOST|LETSENCRYPT)" || echo "‚ùå –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
echo

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤
echo "6. üìú SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã:"
if [ -d "data/ssl" ]; then
    cert_count=$(find data/ssl -name "*.crt" -o -name "*.pem" | wc -l)
    echo "‚úÖ –ù–∞–π–¥–µ–Ω–æ $cert_count —Ñ–∞–π–ª–æ–≤ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤ –≤ data/ssl/"
    
    if [ -f "data/ssl/${DOMAIN}.crt" ]; then
        echo "‚úÖ –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç nginx-proxy –¥–ª—è ${DOMAIN} –Ω–∞–π–¥–µ–Ω"
    elif [ -d "data/ssl/live/${DOMAIN}" ]; then
        echo "‚úÖ –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç Let's Encrypt –¥–ª—è ${DOMAIN} –Ω–∞–π–¥–µ–Ω"
    else
        echo "‚ö†Ô∏è  –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –¥–ª—è ${DOMAIN} –Ω–µ –Ω–∞–π–¥–µ–Ω (–º–æ–∂–µ—Ç –ø–æ–ª—É—á–∞—Ç—å—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏)"
    fi
else
    echo "‚ùå –ü–∞–ø–∫–∞ data/ssl –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
fi
echo

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤ (—Ç–æ–ª—å–∫–æ –æ—à–∏–±–∫–∏)
echo "7. üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤ –Ω–∞ –æ—à–∏–±–∫–∏:"
echo "nginx-proxy –æ—à–∏–±–∫–∏:"
docker-compose logs nginx-proxy 2>/dev/null | grep -i error | tail -3 || echo "  ‚úÖ –û—à–∏–±–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"

echo "acme-companion –æ—à–∏–±–∫–∏:"
docker-compose logs acme-companion 2>/dev/null | grep -i error | tail -3 || echo "  ‚úÖ –û—à–∏–±–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"

echo "xray-server –æ—à–∏–±–∫–∏:"
docker-compose logs xray-server 2>/dev/null | grep -i error | tail -3 || echo "  ‚úÖ –û—à–∏–±–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"
echo

echo "üéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
echo

# –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ–∫—Ä–µ—Ç–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
if [ -n "$SECRET_CONFIG_PATH" ]; then
    echo "üîê –°–µ–∫—Ä–µ—Ç–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π:"
    echo "   https://${DOMAIN}${SECRET_CONFIG_PATH}"
    echo "   ‚ö†Ô∏è  –≠—Ç–∞ —Å—Å—ã–ª–∫–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç –≤–∞—à–∏ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ VPN!"
    echo
fi

echo "üìÅ –ö–ª–∏–µ–Ω—Ç—Å–∫–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –¥–æ—Å—Ç—É–ø–Ω—ã –≤:"
if [ -d "config/client" ]; then
    ls -1 config/client/*.json 2>/dev/null | while read file; do
        echo "  üìÑ $file"
    done
else
    echo "  ‚ùå –ü–∞–ø–∫–∞ config/client –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
    echo "  üí° –í—ã–ø–æ–ª–Ω–∏—Ç–µ: docker-compose --profile tools run --rm config-generator generate"
fi
echo
echo "üîß –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:"
echo "  - –°—Ç–∞—Ç—É—Å: docker-compose ps"
echo "  - –õ–æ–≥–∏: docker-compose logs nginx-proxy acme-companion xray-server"
echo "  - –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞: ./scripts/diagnose-ssl.sh"
echo "  - –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫: docker-compose restart"
echo
echo "üì± –î–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ URL –º–æ–±–∏–ª—å–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π:"
echo "  docker-compose --profile tools run --rm config-generator generate-client vless ws -u" 